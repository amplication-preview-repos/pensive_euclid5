/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ComplianceDocument } from "../../complianceDocument/base/ComplianceDocument";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { Contract } from "../../contract/base/Contract";
import { Driver } from "../../driver/base/Driver";

@ObjectType()
class Truck {
  @ApiProperty({
    required: false,
    type: () => ComplianceDocument,
  })
  @ValidateNested()
  @Type(() => ComplianceDocument)
  @IsOptional()
  complianceDocument?: ComplianceDocument | null;

  @ApiProperty({
    required: false,
    type: () => [ComplianceDocument],
  })
  @ValidateNested()
  @Type(() => ComplianceDocument)
  @IsOptional()
  complianceDocuments?: Array<ComplianceDocument>;

  @ApiProperty({
    required: false,
    type: () => [Contract],
  })
  @ValidateNested()
  @Type(() => Contract)
  @IsOptional()
  contracts?: Array<Contract>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => Driver,
  })
  @ValidateNested()
  @Type(() => Driver)
  @IsOptional()
  driver?: Driver | null;

  @ApiProperty({
    required: false,
    type: () => [Driver],
  })
  @ValidateNested()
  @Type(() => Driver)
  @IsOptional()
  drivers?: Array<Driver>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  registrationNumber!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  truckNumber!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Truck as Truck };
